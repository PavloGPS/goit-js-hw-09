{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAbQQ,SAASC,cAAc,SAC/BC,iBAAiB,UAexB,SAAwBC,GACtBA,EAAIC,iBAMJ,IAJA,IAAMC,GAAOF,EAAIG,OAAOC,SAASf,MAAMgB,MACjCC,GAAMN,EAAIG,OAAOC,SAASE,KAAKD,MAC/BE,GAAQP,EAAIG,OAAOC,SAASG,OAAOF,MAEhCG,EAAW,EAAGA,GAAYD,EAAQC,IAKzCrB,EAAcqB,EAAUN,EAAQI,GAAQE,EAAW,IAClDC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBJ,EAAA0B,OAAOI,QAAQ,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormElSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onFormElSubmit(evt) {\n  evt.preventDefault();\n  \n  const delay=+evt.target.elements.delay.value;\n  const step=+evt.target.elements.step.value;\n  const amount=+evt.target.elements.amount.value;\n  \n  for (let position = 1; position <= amount; position++) {\n    // first promise must to be settled after (delay)ms\n    // second promise must to be settled after(delay+step)ms\n    // third promise must to be settled after (delay+step+step)ms\n    // position-th promise must to be settled after (delay+step*(position-1))ms\n    createPromise(position, delay + step * (position - 1))\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  } \n  // Метод formEl.reset(); не використовую, \n  // так як на відео показано, що форма не очищується   \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","target","elements","value","step","amount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b43c1309.js.map"}